# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\Client\PromoCodeController:
      arguments:
        - '@fit.service.auth.token.generator'
        - '@fit.service.promocode.activator'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    App\Controller\Client\LessonController:
      arguments:
        - '@fit.service.auth.token.generator'
        - '@fit.service.lesson_checker'
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.lesson.manager'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    App\Controller\Client\LessonUserController:
      arguments:
        - '@fit.service.auth.token.generator'
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.lesson_applier'
        - '@fit.service.lesson_checker'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    App\Controller\Client\AuthorizeController:
      arguments:
        - '@fit.service.auth.code.processor'
        - '@fit.service.auth.code.checker'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    App\Controller\Client\TicketController:
          arguments:
            - '@fit.service.auth.token.generator'
            - '@fit.service.user_ticket.buy'
          calls:
            - method: setLogger
              arguments:
                - '@logger'

    App\Controller\Client\TicketPlanController:
      arguments:
        - '@fit.service.auth.token.generator'
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.discount.discounter'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    App\Controller\Client\UserController:
      arguments:
        - '@fit.service.auth.token.generator'
        - '@doctrine.orm.default_entity_manager'
      calls:
        - method: setLogger
          arguments:
            - '@logger'


    fit.service.auth.code.processor:
      class: App\Service\Auth\CodeProcessor
      arguments:
        - '@fit.service.auth.code.generator'
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.sms.sender'

    fit.service.auth.code.generator:
      class: App\Service\Auth\CodeGenerator

    fit.service.auth.code.checker:
      class: App\Service\Auth\CodeChecker
      arguments:
        - '@doctrine.orm.default_entity_manager'

    fit.service.auth.token.creator:
      class: App\Service\Auth\Token\Creator

    fit.service.auth.token.generator:
      class: App\Service\Auth\Token\TokenGenerator

    fit.service.lesson_checker:
      class: App\Service\LessonUser\Checker
      arguments:
        - '@doctrine.orm.default_entity_manager'

    fit.service.lesson_applier:
      class: App\Service\LessonUser\LessonApplier
      arguments:
        - '@doctrine.orm.default_entity_manager'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.promocode.activator:
      class: App\Service\PromoCode\Activator
      arguments:
        - '@doctrine.orm.default_entity_manager'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.sms.api.atomic:
      class: App\Service\Sms\AtomicApi
      arguments:
        - '@guzzle'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.sms.api.smsc:
      class: App\Service\Sms\SmscApi
      arguments:
        - '@guzzle'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.sberbank.client:
      class: App\Service\Sberbank\Client
      arguments:
        - '@guzzle'

    fit.service.user_ticket.buy:
      class: App\Service\UserTicket\Buy
      arguments:
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.sberbank.client'
        - '@fit.service.discount.discounter'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.user_ticket.check:
      public: true
      class: App\Service\UserTicket\Check
      arguments:
        - '@doctrine.orm.default_entity_manager'
        - '@fit.service.sberbank.client'
        - '@fit.service.user_ticket.buy'
      calls:
        - method: setLogger
          arguments:
            - '@logger'

    fit.service.sms.sender:
      class: App\Service\Sms\Sender
      arguments:
        - '@fit.service.sms.api.smsc'

    fit.service.lesson.manager:
      class: App\Service\Lesson\LessonManager
      arguments:
        - '@doctrine.orm.default_entity_manager'

    fit.service.discount.discounter:
      class: App\Service\Discounts\Discounter
      arguments:
        - '@doctrine.orm.default_entity_manager'

    guzzle:
      class: GuzzleHttp\Client

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones